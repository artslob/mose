image: 'python:3.6.9-buster'

flake8:
  script:
    - pip install flake8==3.7.9
    - flake8

migrations:
  services:
    - name: postgres:11.5
      alias: db
  variables:
    POSTGRES_DB: ci_db
    POSTGRES_USER: ci_runner
    POSTGRES_PASSWORD: "ci_pass"
    MOSE_DATABASE_NAME: "$POSTGRES_DB"
    MOSE_DATABASE_USER: "$POSTGRES_USER"
    MOSE_DATABASE_PASSWORD: "$POSTGRES_PASSWORD"
    MOSE_DATABASE_HOST: 'db'
  script:
    - pip install -r requirements.txt
    - pip freeze
    # exits with a non-zero status when model changes without migrations are detected.
    - ./manage.py makemigrations --check
    - ./manage.py migrate
    - ./manage.py populate_db

tests:
  services:
    - name: postgres:11.5
      alias: db
  variables:
    POSTGRES_DB: ci_db
    POSTGRES_USER: ci_runner
    POSTGRES_PASSWORD: "ci_pass"
    MOSE_DATABASE_NAME: "$POSTGRES_DB"
    MOSE_DATABASE_USER: "$POSTGRES_USER"
    MOSE_DATABASE_PASSWORD: "$POSTGRES_PASSWORD"
    MOSE_DATABASE_HOST: 'db'
    MOSE_TEST_SELENIUM_HEADLESS: '1'
  script:
    # install firefox and X virtual framebuffer
    - apt-get update -qq
    - apt-get install -qq -y firefox-esr xvfb
    - firefox --version

    # install firefox driver
    - wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
    - tar -xvzf geckodriver-v0.26.0-linux64.tar.gz
    - chmod +x geckodriver
    - mv geckodriver /usr/local/bin/

    - pip install -r requirements.txt -r requirements-tests.txt
    - pip freeze

    - coverage run manage.py test --no-input
    - coverage report
    # run coverage export only if variable with token is set
    - '[ -z ${COVERALLS_REPO_TOKEN+x} ] || coveralls'

deploy-to-vps:
  stage: deploy
  environment:
    name: vps
  only:
    - deploy/vps
  when: manual
  variables:
    VPS: "artslob@${MOSE_DEPLOY_VPS_IP}"
    PORT: "$MOSE_DEPLOY_VPS_PORT"
    MOSE_PROJECT: "/home/artslob/mose-project"
  before_script:
    - apt-get update -qq
    - apt-get install -qq rsync
    - eval "$(ssh-agent -s)"
    - ssh-add <(echo "$MOSE_DEPLOY_SSH_PRIVATE_KEY")
    - ssh-add -l
    - ssh-add -L
  script:
    - mkdir -p ~/.ssh/
    - ssh-keyscan "$MOSE_DEPLOY_VPS_IP" >> ~/.ssh/known_hosts
    - ssh "$VPS" -p "$PORT" mkdir -p "$MOSE_PROJECT"
    - rsync -chaz --stats --port "${PORT}" "$(pwd)/" "$VPS":"$MOSE_PROJECT/mose"
    - ssh "$VPS" -p "$PORT" "MOSE_PROJECT=$MOSE_PROJECT bash -s" < ./.ci/deploy.sh
